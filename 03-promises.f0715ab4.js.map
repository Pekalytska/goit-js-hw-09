{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA3BSS,SAASC,cAAc,SAE/BC,iBAAiB,UACzB,SAAsBC,GACpBA,EAAEC,iBAMF,IALA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxChB,EAAwBc,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACfC,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAS,EAAGC,EAAgBN,EAAYK,GAAUD,EAAaC,GAAU,EAAGC,GAAiBH,EACpGxB,EAAc0B,EAAQC,GACnBC,MAAK,SAAAC,G,OAAU/B,EAAAgC,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAC,G,OAASnC,EAAAgC,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let amount = 1, delayWithStep = delayValue; amount <= amountValue; amount += 1, delayWithStep += stepValue) {\n    createPromise(amount, delayWithStep)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","Number","value","stepValue","amountValue","amount1","delayWithStep","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f0715ab4.js.map"}